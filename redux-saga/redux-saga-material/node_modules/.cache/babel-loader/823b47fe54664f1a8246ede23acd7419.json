{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/containers/Taskboard/index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport { STATUSES } from './../../constains/';\nimport TaskList from './../../components/TaskList';\nimport TaskForm from './../../components/TaskForm';\nimport PropTypes from 'props-types';\nconst listTask = [{\n  id: 1,\n  title: 'Read book',\n  description: 'React Material UI book',\n  status: 0\n}, {\n  id: 2,\n  title: 'Play soccer',\n  description: 'Invite Crush',\n  status: 2\n}, {\n  id: 3,\n  title: 'Online Facebook',\n  description: 'Online 12AM',\n  status: 1\n}];\n\nclass Taskboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.openForm = () => {\n      this.setState({\n        open: true\n      });\n    };\n  }\n\n  renderBoard() {\n    let xhtml = null;\n    xhtml = React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, STATUSES.map(status => {\n      const taskFiltered = listTask.filter(task => task.status === status.value);\n      return React.createElement(TaskList, {\n        key: status.value,\n        tasks: taskFiltered,\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }));\n    return xhtml;\n  }\n\n  renderForm() {\n    const open = this.state.open;\n    let xhtml = null;\n    xhtml = React.createElement(TaskForm, {\n      open: open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n    return xhtml;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.taskBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.openForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \" Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderBoard(), this.renderForm());\n  }\n\n}\n\nTaskBoard.propTypes = {};\nexport default withStyles(styles)(Taskboard);","map":{"version":3,"sources":["/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/containers/Taskboard/index.js"],"names":["React","Component","withStyles","styles","Button","AddIcon","Grid","STATUSES","TaskList","TaskForm","PropTypes","listTask","id","title","description","status","Taskboard","state","open","handleClose","setState","openForm","renderBoard","xhtml","map","taskFiltered","filter","task","value","renderForm","render","classes","props","taskBoard","button","TaskBoard","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport { STATUSES } from './../../constains/';\nimport TaskList from './../../components/TaskList';\nimport TaskForm from './../../components/TaskForm';\nimport PropTypes from 'props-types';\n\nconst listTask = [\n    {\n        id: 1,\n        title: 'Read book',\n        description: 'React Material UI book',\n        status: 0\n    },\n    {\n        id: 2,\n        title: 'Play soccer',\n        description: 'Invite Crush',\n        status: 2\n    },\n    {\n        id: 3,\n        title: 'Online Facebook',\n        description: 'Online 12AM',\n        status: 1\n    }\n];\n\nclass Taskboard extends Component {\n    state = {\n        open: false\n    }\n\n    renderBoard() {\n        let xhtml = null;\n        xhtml = (\n            <Grid container spacing={2}>\n                {\n                    STATUSES.map(status => {\n                        const taskFiltered = listTask.filter(\n                            task => task.status === status.value\n                        );\n                        return (\n                            <TaskList key={status.value} tasks={taskFiltered} status={status}/>\n                        );\n                    })\n                }\n            </Grid>\n        );\n        return xhtml;\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    openForm = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    renderForm() {\n        const { open } =this.state;\n        let xhtml = null;\n        xhtml =(\n            <TaskForm open={open} onClose={this.handleClose}/>\n        );\n        return xhtml;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.taskBoard}>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.openForm}>\n                    <AddIcon /> Thêm mới công việc\n                </Button>\n                {this.renderBoard()}\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nTaskBoard.propTypes = {\n    \n}\n\nexport default withStyles(styles)(Taskboard);"]},"metadata":{},"sourceType":"module"}