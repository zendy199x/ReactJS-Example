{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/containers/Taskboard/index.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { STATUSES } from './../../constains/';\nimport TaskList from './../../components/TaskList';\nconst listTask = [{\n  id: 1,\n  title: \"Read book\",\n  description: \"React Material UI book\",\n  status: 0\n}, {\n  id: 2,\n  title: \"Play soccer\",\n  description: \"Invite Crush\",\n  status: 2\n}, {\n  id: 3,\n  title: \"Online Facebook\",\n  description: \"Online 12AM\",\n  status: 1\n}];\n\nclass Taskboard extends Component {\n  renderBoard() {\n    let xhtml = null;\n    xhtml = React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, STATUSES.map(status => {\n      const taskFiltered = listTask.filter(task => task.status === status.value);\n      return React.createElement(TaskList, {\n        key: status.value,\n        tasks: taskFiltered,\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }));\n    return xhtml;\n  }\n\n  renderForm() {\n    let xhtml = null;\n    xhtml = React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: \"Email Address\",\n      type: \"email\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Subscribe\")));\n    return xhtml;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.taskBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderBoard(), this.renderForm());\n  }\n\n}\n\nexport default withStyles(styles)(Taskboard);","map":{"version":3,"sources":["/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/containers/Taskboard/index.js"],"names":["React","Component","withStyles","styles","Button","AddIcon","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","STATUSES","TaskList","listTask","id","title","description","status","Taskboard","renderBoard","xhtml","map","taskFiltered","filter","task","value","renderForm","open","handleClose","render","classes","props","taskBoard","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { STATUSES } from './../../constains/';\nimport TaskList from './../../components/TaskList';\n\nconst listTask = [\n    {\n        id: 1,\n        title: \"Read book\",\n        description: \"React Material UI book\",\n        status: 0\n    },\n    {\n        id: 2,\n        title: \"Play soccer\",\n        description: \"Invite Crush\",\n        status: 2\n    },\n    {\n        id: 3,\n        title: \"Online Facebook\",\n        description: \"Online 12AM\",\n        status: 1\n    }\n]\n\nclass Taskboard extends Component {\n\n    renderBoard() {\n        let xhtml = null;\n        xhtml = (\n            <Grid container spacing={2}>\n                {\n                    STATUSES.map(status => {\n                        const taskFiltered = listTask.filter(\n                            task => task.status === status.value\n                        );\n                        return (\n                            <TaskList key={status.value} tasks={taskFiltered} status={status}/>\n                        )\n                    })\n                }\n            </Grid>\n        )\n        return xhtml;\n    }\n\n    renderForm() {\n        let xhtml = null;\n        xhtml =(\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n        )\n        return xhtml;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.taskBoard}>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                    <AddIcon /> Thêm mới công việc\n                </Button>\n                {this.renderBoard()}\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Taskboard);"]},"metadata":{},"sourceType":"module"}