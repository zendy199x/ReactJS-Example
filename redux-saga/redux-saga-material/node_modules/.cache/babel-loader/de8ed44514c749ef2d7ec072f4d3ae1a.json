{"ast":null,"code":"import { fork, take, call, put } from 'redux-saga/effects';\nimport { fetchListTaskSuccess, fetchListTaskFailed } from '../actions/task';\nimport * as taskTypes from './../constants/task';\nimport { getList } from './../apis/task';\nimport { STATUS_CODE } from './../constants';\nimport { showLoading, hideLoading } from '../actions/ui';\n/**\r\n * B1: Thưc thi action fetch task\r\n * B2: Gọi API\r\n * B2.2 Hien thi thanh tien trinh loading\r\n * B3: Kiem tra status code\r\n * Neu thanh cong...\r\n * Neu that bai\r\n * B4: Tat loading\r\n * B5: Thuc thi cong viec tiep theo\r\n */\n\nfunction* watchFetchListTaskAction() {\n  while (true) {\n    yield take(taskTypes.FETCH_TASK);\n    yield put(showLoading());\n    const resp = yield call(getList);\n    const status = resp.status,\n          data = resp.data;\n\n    if (status === STATUS_CODE.SUCCESS) {\n      //dispatch action fetchListTaskSuccess\n      yield put(fetchListTaskSuccess(data));\n    } else {\n      //dispatch action fetchListTaskSuccess fail\n      yield put(fetchListTaskFailed(data));\n    }\n  }\n}\n\nfunction* watchCreateTaskAction() {\n  console.log('watch create task action');\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchListTaskAction);\n  yield fork(watchCreateTaskAction);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["C:\\Coder\\react-nghiepuit\\redux-saga\\redux-saga-material\\src\\sagas\\index.js"],"names":["fork","take","call","put","fetchListTaskSuccess","fetchListTaskFailed","taskTypes","getList","STATUS_CODE","showLoading","hideLoading","watchFetchListTaskAction","FETCH_TASK","resp","status","data","SUCCESS","watchCreateTaskAction","console","log","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,iBAA1D;AACA,OAAO,KAAKC,SAAZ,MAA2B,qBAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AAEA;;;;;;;;;;;AAUA,UAAUC,wBAAV,GAAqC;AACjC,SAAO,IAAP,EAAa;AACT,UAAMV,IAAI,CAACK,SAAS,CAACM,UAAX,CAAV;AACA,UAAMT,GAAG,CAACM,WAAW,EAAZ,CAAT;AACA,UAAMI,IAAI,GAAG,MAAMX,IAAI,CAACK,OAAD,CAAvB;AAHS,UAIDO,MAJC,GAIgBD,IAJhB,CAIDC,MAJC;AAAA,UAIOC,IAJP,GAIgBF,IAJhB,CAIOE,IAJP;;AAKT,QAAID,MAAM,KAAKN,WAAW,CAACQ,OAA3B,EAAoC;AAChC;AACA,YAAMb,GAAG,CAACC,oBAAoB,CAACW,IAAD,CAArB,CAAT;AACH,KAHD,MAGO;AACH;AACA,YAAMZ,GAAG,CAACE,mBAAmB,CAACU,IAAD,CAApB,CAAT;AACH;AACJ;AACJ;;AAED,UAAUE,qBAAV,GAAkC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;;AAED,UAAUC,QAAV,GAAqB;AACjB,QAAMpB,IAAI,CAACW,wBAAD,CAAV;AACA,QAAMX,IAAI,CAACiB,qBAAD,CAAV;AACH;;AAED,eAAeG,QAAf","sourcesContent":["import { fork, take, call, put } from 'redux-saga/effects';\r\nimport { fetchListTaskSuccess, fetchListTaskFailed } from '../actions/task';\r\nimport * as taskTypes from './../constants/task';\r\nimport { getList } from './../apis/task';\r\nimport { STATUS_CODE } from './../constants';\r\nimport { showLoading, hideLoading } from '../actions/ui'\r\n\r\n/**\r\n * B1: Thưc thi action fetch task\r\n * B2: Gọi API\r\n * B2.2 Hien thi thanh tien trinh loading\r\n * B3: Kiem tra status code\r\n * Neu thanh cong...\r\n * Neu that bai\r\n * B4: Tat loading\r\n * B5: Thuc thi cong viec tiep theo\r\n */\r\nfunction* watchFetchListTaskAction() {\r\n    while (true) {\r\n        yield take(taskTypes.FETCH_TASK);\r\n        yield put(showLoading());\r\n        const resp = yield call(getList);\r\n        const { status, data } = resp;\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            //dispatch action fetchListTaskSuccess\r\n            yield put(fetchListTaskSuccess(data));\r\n        } else {\r\n            //dispatch action fetchListTaskSuccess fail\r\n            yield put(fetchListTaskFailed(data));\r\n        }\r\n    }\r\n}\r\n\r\nfunction* watchCreateTaskAction() {\r\n    console.log('watch create task action');\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield fork(watchFetchListTaskAction);\r\n    yield fork(watchCreateTaskAction);\r\n}\r\n\r\nexport default rootSaga;\r\n"]},"metadata":{},"sourceType":"module"}