{"ast":null,"code":"import * as taskApis from './../apis/task';\nimport * as taskContants from './../constants/task';\nexport const fetchListTask = () => {\n  return {\n    type: taskContants.FETCH_TASK\n  };\n};\nexport const fetchListTaskSuccess = data => {\n  return {\n    type: taskContants.FETCH_TASK_SUCCESS,\n    payload: {\n      data\n    }\n  };\n};\nexport const fetchListTaskFailed = error => {\n  return {\n    type: taskContants.FETCH_TASK_FAILED,\n    payload: {\n      error\n    }\n  };\n}; // B1: fetchListTaskRequest()\n// B2: reset: state tasks => []\n// B3: fetchListTaskSuccess(data response)\n\nexport const fetchListTaskRequest = () => {\n  return dispatch => {\n    dispatch(fetchListTask());\n    taskApis.getList().then(resp => {\n      const data = resp.data;\n      dispatch(fetchListTaskSuccess(data));\n    }).catch(error => {\n      dispatch(fetchListTaskFailed(error));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/actions/task.js"],"names":["taskApis","taskContants","fetchListTask","type","FETCH_TASK","fetchListTaskSuccess","data","FETCH_TASK_SUCCESS","payload","fetchListTaskFailed","error","FETCH_TASK_FAILED","fetchListTaskRequest","dispatch","getList","then","resp","catch"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,gBAA1B;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAEF,YAAY,CAACG;AADhB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAGC,IAAI,IAAI;AACxC,SAAO;AACHH,IAAAA,IAAI,EAAEF,YAAY,CAACM,kBADhB;AAEHC,IAAAA,OAAO,EAAE;AACLF,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM;AASP,OAAO,MAAMG,mBAAmB,GAAGC,KAAK,IAAI;AACxC,SAAO;AACHP,IAAAA,IAAI,EAAEF,YAAY,CAACU,iBADhB;AAEHH,IAAAA,OAAO,EAAE;AACLE,MAAAA;AADK;AAFN,GAAP;AAMH,CAPM,C,CASP;AACA;AACA;;AAEA,OAAO,MAAME,oBAAoB,GAAG,MAAM;AACtC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACAF,IAAAA,QAAQ,CAACc,OAAT,GAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAAA,YACpBV,IADoB,GACXU,IADW,CACpBV,IADoB;AAE5BO,MAAAA,QAAQ,CAACR,oBAAoB,CAACC,IAAD,CAArB,CAAR;AACH,KAHD,EAGGW,KAHH,CAGSP,KAAK,IAAI;AACdG,MAAAA,QAAQ,CAACJ,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACH,KALD;AAMH,GARD;AASH,CAVM","sourcesContent":["import * as taskApis from './../apis/task';\r\nimport * as taskContants from './../constants/task';\r\n\r\nexport const fetchListTask = () => {\r\n    return {\r\n        type: taskContants.FETCH_TASK\r\n    }\r\n}\r\n\r\nexport const fetchListTaskSuccess = data => {\r\n    return {\r\n        type: taskContants.FETCH_TASK_SUCCESS,\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchListTaskFailed = error => {\r\n    return {\r\n        type: taskContants.FETCH_TASK_FAILED,\r\n        payload: {\r\n            error\r\n        }\r\n    }\r\n}\r\n\r\n// B1: fetchListTaskRequest()\r\n// B2: reset: state tasks => []\r\n// B3: fetchListTaskSuccess(data response)\r\n\r\nexport const fetchListTaskRequest = () => {\r\n    return dispatch => {\r\n        dispatch(fetchListTask());\r\n        taskApis.getList().then(resp => {\r\n            const { data } = resp;\r\n            dispatch(fetchListTaskSuccess(data));\r\n        }).catch(error => {\r\n            dispatch(fetchListTaskFailed(error));\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}