{"ast":null,"code":"import _defineProperty from \"/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as taskContants from './../constants/task';\nconst initialState = {\n  listTask: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case taskContants.FETCH_TASK:\n      {\n        return _objectSpread({}, state, {\n          listTask: []\n        });\n      }\n\n    case taskContants.FETCH_TASK_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          listTask: []\n        });\n      }\n\n    case taskContants.FETCH_TASK_FAILED:\n      {\n        return _objectSpread({}, state, {\n          listTask: []\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/zendy/Coder/React-nghiepuit/redux-saga/redux-saga-material/src/reducers/task.js"],"names":["taskContants","initialState","listTask","reducer","state","action","type","FETCH_TASK","FETCH_TASK_SUCCESS","FETCH_TASK_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,YAAZ,MAA8B,qBAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAIH,YAAV,EAAwBI,MAAxB,KAAmC;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,YAAY,CAACO,UAAlB;AAA8B;AAC1B,iCACOH,KADP;AAEIF,UAAAA,QAAQ,EAAE;AAFd;AAIH;;AACD,SAAKF,YAAY,CAACQ,kBAAlB;AAAsC;AAClC,iCACOJ,KADP;AAEIF,UAAAA,QAAQ,EAAE;AAFd;AAIH;;AACD,SAAKF,YAAY,CAACS,iBAAlB;AAAqC;AACjC,iCACOL,KADP;AAEIF,UAAAA,QAAQ,EAAE;AAFd;AAIH;;AACD;AACA,aAAOE,KAAP;AApBJ;AAsBH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as taskContants from './../constants/task';\r\n\r\nconst initialState = {\r\n    listTask: []\r\n};\r\n\r\nconst reducer = (state =  initialState, action) => {\r\n    switch(action.type) {\r\n        case taskContants.FETCH_TASK: {\r\n            return {\r\n                ...state,\r\n                listTask: []\r\n            }\r\n        }\r\n        case taskContants.FETCH_TASK_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                listTask: []\r\n            }\r\n        }\r\n        case taskContants.FETCH_TASK_FAILED: {\r\n            return {\r\n                ...state,\r\n                listTask: []\r\n            }\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}